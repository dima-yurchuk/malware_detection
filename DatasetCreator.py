import os
import csv
from csv import writer
from pandas import read_csv

from DataExtractor import DataExtractorJSON

class DatasetCreator():
    def __init__(self, data_extractor, file_name, folder_path_malware, folder_path_benign):
        self.data_extractor = data_extractor
        self.file_name = file_name
        self.folder_path_malware = folder_path_malware
        self.folder_path_benign = folder_path_benign

    def _get_headers(self):
        with open(self.file_name) as csv_file:
            csv_reader = csv.reader(csv_file, delimiter = ',')
            headers = []
        
            for row in csv_reader:
                headers.append(row)
                break

        headers = headers[0][1:-1] 

        return headers

    def _get_data_by_headers(self, folder_path, headers, is_malware):
        data_for_model_from_all_files = []

        for file_name in os.listdir(folder_path):
            file_path = os.path.join(folder_path, file_name)

            data_for_model = self.data_extractor.process(file_path, headers, is_malware)
            data_for_model_from_all_files.append(data_for_model)

        return data_for_model_from_all_files  

    def _add_data_to_csv(self, data_for_model_from_all_files):
        data = read_csv(self.file_name)
        hashes = data['hash'].tolist()

        with open(self.file_name, 'a') as f_object:
            writer_object = writer(f_object)

            for row in data_for_model_from_all_files:
                if row[0] not in hashes:
                    writer_object.writerow(row)

        f_object.close()

    def process(self):
        headers = self._get_headers()

        data_for_model_malware= self._get_data_by_headers(self.folder_path_malware, headers, True)
        data_for_model_benign= self._get_data_by_headers(self.folder_path_benign, headers, False)

        self._add_data_to_csv(data_for_model_malware + data_for_model_benign)

